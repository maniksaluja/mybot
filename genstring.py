import asyncio
import os

from pyrogram import Client as c

try:
    from config import API_ID, API_HASH
    
    if not API_ID or not API_HASH:
        raise ValueError("API_ID or API_HASH is empty in config.py")
    
    if not str(API_ID).isdigit():
        raise ValueError("API_ID must be a numeric value")
    
    if not isinstance(API_HASH, str) or len(API_HASH) < 10:
        raise ValueError("API_HASH must be a valid string with at least 10 characters")
    
    print("Using valid API_ID and API_HASH from config.py")
    
except (ImportError, ValueError, AttributeError) as e:
    print(f"Config issue: {e}")
    print("Please enter API credentials manually:")
    
    while True:
        API_ID = input("\nEnter Your API_ID:\n > ").strip()
        if API_ID.isdigit():
            API_ID = int(API_ID)
            break
        else:
            print("API_ID must be a numeric value. Please try again.")
    
    while True:
        API_HASH = input("\nEnter Your API_HASH:\n > ").strip()
        if len(API_HASH) >= 10:
            break
        else:
            print("API_HASH must be at least 10 characters long. Please try again.")

print("\n\n Enter Phone number when asked.\n\n")

session_name = ":memory:"

i = c(session_name, api_id=API_ID, api_hash=API_HASH, in_memory=True)


async def main():
    await i.start()
    ss = await i.export_session_string()
    xx = f"HERE IS YOUR STRING SESSION, COPY IT, DON'T SHARE!!\n\n`{ss}`\n\nGENERATED BY Stranger"
    ok = await i.send_message("me", xx)
    print("\nHERE IS YOUR STRING SESSION, COPY IT, DON'T SHARE!!\n")
    print(f"\n{ss}\n") 
    print("\nGENERATED BY Stranger\n")

asyncio.run(main())
